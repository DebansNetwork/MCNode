0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@1.4.28
3 info using node@v0.10.33
4 verbose publish [ '.' ]
5 verbose cache add [ '.', null ]
6 verbose cache add name=undefined spec="." args=[".",null]
7 verbose parsed url { protocol: null,
7 verbose parsed url   slashes: null,
7 verbose parsed url   auth: null,
7 verbose parsed url   host: null,
7 verbose parsed url   port: null,
7 verbose parsed url   hostname: null,
7 verbose parsed url   hash: null,
7 verbose parsed url   search: null,
7 verbose parsed url   query: null,
7 verbose parsed url   pathname: '.',
7 verbose parsed url   path: '.',
7 verbose parsed url   href: '.' }
8 silly lockFile 3a52ce78- .
9 verbose lock . /home/xero/.npm/3a52ce78-.lock
10 verbose tar pack [ '/home/xero/.npm/mcnode/0.1.0/package.tgz', '.' ]
11 verbose tarball /home/xero/.npm/mcnode/0.1.0/package.tgz
12 verbose folder .
13 info prepublish mcnode@0.1.0
14 silly lockFile 1f1177db-tar tar://.
15 verbose lock tar://. /home/xero/.npm/1f1177db-tar.lock
16 silly lockFile 3754122a-ero-npm-mcnode-0-1-0-package-tgz tar:///home/xero/.npm/mcnode/0.1.0/package.tgz
17 verbose lock tar:///home/xero/.npm/mcnode/0.1.0/package.tgz /home/xero/.npm/3754122a-ero-npm-mcnode-0-1-0-package-tgz.lock
18 silly lockFile 1f1177db-tar tar://.
19 silly lockFile 1f1177db-tar tar://.
20 silly lockFile 3754122a-ero-npm-mcnode-0-1-0-package-tgz tar:///home/xero/.npm/mcnode/0.1.0/package.tgz
21 silly lockFile 3754122a-ero-npm-mcnode-0-1-0-package-tgz tar:///home/xero/.npm/mcnode/0.1.0/package.tgz
22 silly lockFile b26cb43f-me-xero-npm-mcnode-0-1-0-package /home/xero/.npm/mcnode/0.1.0/package
23 verbose lock /home/xero/.npm/mcnode/0.1.0/package /home/xero/.npm/b26cb43f-me-xero-npm-mcnode-0-1-0-package.lock
24 silly lockFile b26cb43f-me-xero-npm-mcnode-0-1-0-package /home/xero/.npm/mcnode/0.1.0/package
25 silly lockFile b26cb43f-me-xero-npm-mcnode-0-1-0-package /home/xero/.npm/mcnode/0.1.0/package
26 silly lockFile 3a52ce78- .
27 silly lockFile 3a52ce78- .
28 silly publish { name: 'mcnode',
28 silly publish   version: '0.1.0',
28 silly publish   description: 'A Minecraft library to fetch information from Mojang\'s API',
28 silly publish   main: './lib',
28 silly publish   scripts: { test: 'node ~/node_modules/mcnode' },
28 silly publish   repository: { type: 'git', url: 'https://github.com/JamenMarz/MCNode.git' },
28 silly publish   keywords: [ 'Minecraft', 'HTTP', 'API', 'Mojang' ],
28 silly publish   author:
28 silly publish    { name: 'Jamen Marz',
28 silly publish      email: 'jamen.marz@gmail.com',
28 silly publish      url: 'https://jamenmarz.com/' },
28 silly publish   license: 'Apache 2.0',
28 silly publish   bugs: { url: 'https://github.com/JamenMarz/MCNode/issues' },
28 silly publish   homepage: 'https://github.com/JamenMarz/MCNode',
28 silly publish   readme: 'Redstone Mc Avatar\n==================\n\nA very lightweight script - at only __430 bytes__.  You put in a Minecraft username, and it returns the requested user\'s data, including their __UUID__, current __username__, __skin URL__, and __cape__ (If avalible)...\n\n##Required Modules\n\n - __https__: This is standard in NodeJS. Used for making GET requests to the API.\n\n##Process\n\nThis script makes 2 intial HTTP requests:\n\n 1. Fetching the UUID from a username.\n 2. Fetching the JSON data from the retrieved UUID.\n\nThen a callback function is triggered, with the data returned as argument.  Here is an example of what this might look like:\n\n```\nvar mcnode = require("./mcnode.js");\n\nmcnode.request("zjamentyler", function(user){\n  console.log(user.profileId);\n  // This would log the user\'s UUID,\n});\n```\n\nTo see what\'s available, simply log `user`, to see what can be fetched.\n',
28 silly publish   readmeFilename: 'README.md',
28 silly publish   gitHead: '98cf520d67150ffe047d08c50557e6662558bdd3',
28 silly publish   _id: 'mcnode@0.1.0',
28 silly publish   _shasum: '6039e79ab8f91fd10a27989a789bad5e32a740d4',
28 silly publish   _from: '.' }
29 verbose request where is /mcnode
30 verbose request registry https://registry.npmjs.org/
31 verbose request id 2fea2063acd54dfe
32 verbose url raw /mcnode
33 verbose url resolving [ 'https://registry.npmjs.org/', './mcnode' ]
34 verbose url resolved https://registry.npmjs.org/mcnode
35 verbose request where is https://registry.npmjs.org/mcnode
36 info trying registry request attempt 1 at 10:32:01
37 http PUT https://registry.npmjs.org/mcnode
38 http 403 https://registry.npmjs.org/mcnode
39 verbose headers { date: 'Fri, 06 Feb 2015 17:32:05 GMT',
39 verbose headers   server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
39 verbose headers   'content-type': 'application/json',
39 verbose headers   'cache-control': 'max-age=60',
39 verbose headers   'content-length': '3306',
39 verbose headers   'accept-ranges': 'bytes',
39 verbose headers   via: '1.1 varnish',
39 verbose headers   'x-served-by': 'cache-sjc3120-SJC',
39 verbose headers   'x-cache': 'MISS',
39 verbose headers   'x-cache-hits': '0',
39 verbose headers   'x-timer': 'S1423243925.452233,VS0,VE60',
39 verbose headers   'keep-alive': 'timeout=10, max=50',
39 verbose headers   connection: 'Keep-Alive' }
40 error publish Failed PUT 403
41 error Error: forbidden cannot modify pre-existing version: 0.1.0
41 error old={"name":"mcnode","version":"0.1.0","description":"A Minecraft library to fetch information from Mojang's API","main":"./lib","scripts":{"test":"node ~/node_modules/mcnode"},"repository":{"type":"git","url":"https://github.com/JamenMarz/MCNode.git"},"keywords":["Minecraft","HTTP","API","Mojang"],"author":{"name":"Jamen Marz","email":"jamen.marz@gmail.com","url":"https://jamenmarz.com/"},"license":"Apache 2.0","bugs":{"url":"https://github.com/JamenMarz/MCNode/issues"},"homepage":"https://github.com/JamenMarz/MCNode","gitHead":"98cf520d67150ffe047d08c50557e6662558bdd3","_id":"mcnode@0.1.0","_shasum":"a56ae173a5ea39330dcb585c6aefa6090e8b15a1","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"jamenmarz","email":"jamen.marz@gmail.com"},"maintainers":[{"name":"jamenmarz","email":"jamen.marz@gmail.com"}],"dist":{"shasum":"a56ae173a5ea39330dcb585c6aefa6090e8b15a1","tarball":"http://registry.npmjs.org/mcnode/-/mcnode-0.1.0.tgz"}}
41 error new={"name":"mcnode","version":"0.1.0","description":"A Minecraft library to fetch information from Mojang's API","main":"./lib","scripts":{"test":"node ~/node_modules/mcnode"},"repository":{"type":"git","url":"https://github.com/JamenMarz/MCNode.git"},"keywords":["Minecraft","HTTP","API","Mojang"],"author":{"name":"Jamen Marz","email":"jamen.marz@gmail.com","url":"https://jamenmarz.com/"},"license":"Apache 2.0","bugs":{"url":"https://github.com/JamenMarz/MCNode/issues"},"homepage":"https://github.com/JamenMarz/MCNode","readme":"Redstone Mc Avatar\u000a==================\u000a\u000aA very lightweight script - at only __430 bytes__.  You put in a Minecraft username, and it returns the requested user's data, including their __UUID__, current __username__, __skin URL__, and __cape__ (If avalible)...\u000a\u000a##Required Modules\u000a\u000a - __https__: This is standard in NodeJS. Used for making GET requests to the API.\u000a\u000a##Process\u000a\u000aThis script makes 2 intial HTTP requests:\u000a\u000a 1. Fetching the UUID from a username.\u000a 2. Fetching the JSON data from the retrieved UUID.\u000a\u000aThen a callback function is triggered, with the data returned as argument.  Here is an example of what this might look like:\u000a\u000a```\u000avar mcnode = require(\"./mcnode.js\");\u000a\u000amcnode.request(\"zjamentyler\", function(user){\u000a  console.log(user.profileId);\u000a  // This would log the user's UUID,\u000a});\u000a```\u000a\u000aTo see what's available, simply log `user`, to see what can be fetched.\u000a","readmeFilename":"README.md","gitHead":"98cf520d67150ffe047d08c50557e6662558bdd3","_id":"mcnode@0.1.0","_shasum":"6039e79ab8f91fd10a27989a789bad5e32a740d4","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"jamenmarz","email":"jamen.marz@gmail.com"},"maintainers":[{"name":"jamenmarz","email":"jamen.marz@gmail.com"}],"dist":{"shasum":"6039e79ab8f91fd10a27989a789bad5e32a740d4","tarball":"http://registry.npmjs.org/mcnode/-/mcnode-0.1.0.tgz"}}: mcnode
41 error     at RegClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:308:14)
41 error     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:246:65)
41 error     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:236:22)
41 error     at Request.emit (events.js:98:17)
41 error     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1142:14)
41 error     at Request.emit (events.js:117:20)
41 error     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1096:12)
41 error     at IncomingMessage.emit (events.js:117:20)
41 error     at _stream_readable.js:943:16
41 error     at process._tickCallback (node.js:419:13)
42 error If you need help, you may report this *entire* log,
42 error including the npm and node versions, at:
42 error     <http://github.com/npm/npm/issues>
43 error System Linux 3.11.0-12-generic
44 error command "/usr/local/bin/node" "/usr/local/bin/npm" "publish"
45 error cwd /home/xero/Projects/MCNode
46 error node -v v0.10.33
47 error npm -v 1.4.28
48 verbose exit [ 1, true ]
